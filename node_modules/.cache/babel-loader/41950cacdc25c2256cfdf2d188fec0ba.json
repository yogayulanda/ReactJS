{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\btpnshifted\\\\Documents\\\\Project\\\\Shifted\\\\React\\\\project01\\\\src\\\\pages\\\\login\\\\index.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { RowInput, Input } from '../../components';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeInput = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.postData = async dataLogin => {\n      await fetch('http://localhost:3030/auth/login', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(dataLogin)\n      }).then(response => response.json()).then(result => {\n        window.alert(result.message);\n        const dataUser = result.data[0].dataUser;\n        const token = result.data[0].token;\n        this.props.doLogin({\n          dataUser,\n          token\n        });\n      }).catch(error => console.log('error', error));\n    };\n\n    this.onLogin = () => {\n      const {\n        username,\n        password\n      } = this.state;\n\n      if (username && password) {\n        this.postData({\n          username,\n          password\n        });\n      } else {\n        window.alert(\"Username dan Password tidak boleh kosong!\");\n      }\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      dataLogin: {}\n    };\n  }\n\n  render() {\n    const {\n      username,\n      password\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(RowInput, {\n      value: this.state.username,\n      label: \"Username\",\n      type: \"text\",\n      name: \"username\",\n      onChange: this.onChangeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(RowInput, {\n      value: this.state.password,\n      label: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      onChange: this.onChangeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      typeInput: \"button\",\n      valueInput: \"Login\",\n      onClickInput: this.onLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"Username: \", this.state.usernameLogin));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  statusLogin: state.auth.isLoggedIn,\n  usernameLogin: state.auth.username\n});\n\nconst mapDispatchToProps = dispatch => ({\n  doLogin: user => dispatch({\n    type: \"LOGIN\",\n    payload: {\n      username: user\n    }\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/btpnshifted/Documents/Project/Shifted/React/project01/src/pages/login/index.js"],"names":["React","Component","connect","RowInput","Input","Login","constructor","props","onChangeInput","e","setState","target","name","value","postData","dataLogin","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","result","window","alert","message","dataUser","data","token","doLogin","catch","error","console","log","onLogin","username","password","state","render","usernameLogin","mapStateToProps","statusLogin","auth","isLoggedIn","mapDispatchToProps","dispatch","user","type","payload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\"\r\nimport { RowInput, Input } from '../../components';\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            dataLogin:{}\r\n        }\r\n    }\r\n\r\n    \r\n    onChangeInput = e => {\r\n        this.setState({        \r\n            [e.target.name]:e.target.value\r\n        })\r\n    }\r\n    postData= async(dataLogin)=>{\r\n        await fetch('http://localhost:3030/auth/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(dataLogin)\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            window.alert(result.message)\r\n            const dataUser = result.data[0].dataUser\r\n            const token = result.data[0].token\r\n            this.props.doLogin({dataUser,token})\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n    onLogin = () => {\r\n        const { username, password } = this.state\r\n        if (username && password){    \r\n            this.postData({username,password})\r\n        }\r\n        else {\r\n            window.alert(\"Username dan Password tidak boleh kosong!\")\r\n        }\r\n    }\r\n        \r\n\r\n    render() {\r\n        const {username, password} = this.props\r\n            \r\n        return (\r\n            <div>\r\n                <div>\r\n                    <RowInput value={this.state.username} label=\"Username\" type=\"text\" name=\"username\" onChange={this.onChangeInput} />\r\n                    <RowInput value={this.state.password} label=\"Password\" type=\"password\" name=\"password\" onChange={this.onChangeInput} />\r\n                    <div>\r\n                        <Input typeInput=\"button\" valueInput=\"Login\" onClickInput={this.onLogin} />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    Username: {this.state.usernameLogin}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    statusLogin: state.auth.isLoggedIn,\r\n    usernameLogin: state.auth.username,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    doLogin: (user) => dispatch({ type: \"LOGIN\", payload: { username: user } })\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)"]},"metadata":{},"sourceType":"module"}