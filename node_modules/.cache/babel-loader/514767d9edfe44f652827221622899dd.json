{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\btpnshifted\\\\Documents\\\\Project\\\\Shifted\\\\React\\\\project01\\\\src\\\\pages\\\\daftar\\\\index.js\";\nimport React, { Component } from 'react';\nimport { RowInput, Input } from '../../components';\nimport \"./style.css\";\nimport imgDaftar from \"../../img/register.svg\";\n\nclass Daftar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeInput = e => {\n      let timestamp = new Date().getTime();\n      let newUser = { ...this.state.addUser\n      };\n      newUser['id'] = timestamp;\n      newUser[e.target.name] = e.target.value;\n      this.setState({\n        addUser: newUser\n      });\n    };\n\n    this.getPostAPI = () => {\n      fetch('http://localhost:3030/users').then(response => response.json()).then(json => this.setState({\n        users: json\n      }));\n    };\n\n    this.handleRemove = data => {\n      console.log(data);\n      fetch(`http://localhost:3030/users/delete/${data}`).then(res => {\n        this.getPostAPI();\n        console.log(res);\n        window.alert('Data Berhasil Dihapus !');\n      });\n    };\n\n    this.postData = async postData => {\n      await fetch('http://localhost:3030/auth/daftar', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(postData)\n      }).then(response => response.json()).then(result => {\n        window.alert(result.message);\n      }).catch(error => console.log('error', error));\n    };\n\n    this.submitUser = () => {\n      console.log(this.state.addUser);\n      this.postData(this.state.addUser);\n      this.getPostAPI();\n    };\n\n    this.state = {\n      users: [],\n      addUser: {\n        id: 1,\n        nik: '',\n        jabatan: '',\n        nama: '',\n        username: '',\n        password: '',\n        alamat: '',\n        roleType: 'user'\n      }\n    };\n  } // Menangkap nilai tambah user\n\n\n  // Ambil Data Semua User\n  componentDidMount() {\n    fetch('http://localhost:3030/users').then(response => response.json()).then(json => this.setState({\n      users: json\n    }));\n  } // refreshHalaman Setelah Aksi\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sectionDaftar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-daftar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"daftar\",\n      src: imgDaftar,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-daftar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(RowInput, {\n      value: this.state.nama,\n      label: \"Nama\",\n      type: \"text\",\n      name: \"nama\",\n      onChange: this.onChangeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(RowInput, {\n      value: this.state.nik,\n      label: \"Nik\",\n      type: \"text\",\n      name: \"nik\",\n      onChange: this.onChangeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(RowInput, {\n      value: this.state.jabatan,\n      label: \"Jabatan\",\n      type: \"text\",\n      name: \"jabatan\",\n      onChange: this.onChangeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(RowInput, {\n      value: this.state.username,\n      label: \"Username\",\n      type: \"text\",\n      name: \"username\",\n      onChange: this.onChangeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(RowInput, {\n      value: this.state.password,\n      label: \"Password\",\n      type: \"password\",\n      name: \"password\",\n      onChange: this.onChangeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(RowInput, {\n      value: this.state.alamat,\n      label: \"Alamat\",\n      type: \"text\",\n      name: \"alamat\",\n      onChange: this.onChangeInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      typeInput: \"button\",\n      valueInput: \"Daftar\",\n      onClickInput: this.submitUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, this.renderUsers()));\n  }\n\n}\n\nexport default Daftar;","map":{"version":3,"sources":["C:/Users/btpnshifted/Documents/Project/Shifted/React/project01/src/pages/daftar/index.js"],"names":["React","Component","RowInput","Input","Daftar","constructor","props","onChangeInput","e","timestamp","Date","getTime","newUser","state","addUser","target","name","value","setState","getPostAPI","fetch","then","response","json","users","handleRemove","data","console","log","res","window","alert","postData","method","headers","Accept","body","JSON","stringify","result","message","catch","error","submitUser","id","nik","jabatan","nama","username","password","alamat","roleType","componentDidMount","render","imgDaftar","renderUsers"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;AACA,OAAO,aAAP;;;AAGA,MAAMC,MAAN,SAAqBH,SAArB,CAA+B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAkBnBC,aAlBmB,GAkBHC,CAAC,IAAI;AACjB,UAAIC,SAAS,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAhB;AACA,UAAIC,OAAO,GAAG,EAAC,GAAG,KAAKC,KAAL,CAAWC;AAAf,OAAd;AACAF,MAAAA,OAAO,CAAC,IAAD,CAAP,GAAgBH,SAAhB;AACAG,MAAAA,OAAO,CAAEJ,CAAC,CAACO,MAAF,CAASC,IAAX,CAAP,GAAwBR,CAAC,CAACO,MAAF,CAASE,KAAjC;AACA,WAAKC,QAAL,CAAc;AACVJ,QAAAA,OAAO,EAAEF;AADC,OAAd;AAGH,KA1BkB;;AAAA,SAoCnBO,UApCmB,GAoCN,MAAM;AACXC,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAI,KAAKL,QAAL,CAAc;AAAEM,QAAAA,KAAK,EAAED;AAAT,OAAd,CAFlB;AAGP,KAxCkB;;AAAA,SA2CnBE,YA3CmB,GA2CHC,IAAD,IAAW;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAN,MAAAA,KAAK,CAAE,sCAAqCM,IAAK,EAA5C,CAAL,CAAoDL,IAApD,CAA2DQ,GAAD,IAAO;AAC7D,aAAKV,UAAL;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACAC,QAAAA,MAAM,CAACC,KAAP,CAAa,yBAAb;AACH,OAJD;AAKH,KAlDkB;;AAAA,SAsDnBC,QAtDmB,GAsDR,MAAMA,QAAN,IAAiB;AACxB,YAAMZ,KAAK,CAAC,mCAAD,EAAsC;AAC7Ca,QAAAA,MAAM,EAAE,MADqC;AAE7CC,QAAAA,OAAO,EAAE;AACLC,UAAAA,MAAM,EAAE,kBADH;AAEL,0BAAgB;AAFX,SAFoC;AAM7CC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,QAAf;AANuC,OAAtC,CAAL,CAQLX,IARK,CAQAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARZ,EASLF,IATK,CASAkB,MAAM,IAAI;AACZT,QAAAA,MAAM,CAACC,KAAP,CAAaQ,MAAM,CAACC,OAApB;AACH,OAXK,EAYLC,KAZK,CAYCC,KAAK,IAAIf,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBc,KAArB,CAZV,CAAN;AAaH,KApEkB;;AAAA,SAuEnBC,UAvEmB,GAuEN,MAAM;AACfhB,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWC,OAAvB;AACA,WAAKkB,QAAL,CAAc,KAAKnB,KAAL,CAAWC,OAAzB;AACA,WAAKK,UAAL;AAEH,KA5EkB;;AAEf,SAAKN,KAAL,GAAa;AACTW,MAAAA,KAAK,EAAC,EADG;AAETV,MAAAA,OAAO,EAAC;AACJ8B,QAAAA,EAAE,EAAC,CADC;AAEJC,QAAAA,GAAG,EAAC,EAFA;AAGJC,QAAAA,OAAO,EAAC,EAHJ;AAIJC,QAAAA,IAAI,EAAC,EAJD;AAKJC,QAAAA,QAAQ,EAAC,EALL;AAMJC,QAAAA,QAAQ,EAAC,EANL;AAOJC,QAAAA,MAAM,EAAC,EAPH;AAQJC,QAAAA,QAAQ,EAAC;AARL;AAFC,KAAb;AAaH,GAhB0B,CAkB/B;;;AAWA;AACIC,EAAAA,iBAAiB,GAAG;AAChBhC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUE,IAAI,IAAI,KAAKL,QAAL,CAAc;AAAEM,MAAAA,KAAK,EAAED;AAAT,KAAd,CAFlB;AAGH,GAlC0B,CAoC3B;;;AA4CA8B,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAC,QAAT;AAAkB,MAAA,GAAG,EAAEC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKzC,KAAL,CAAWkC,IAA5B;AAAkC,MAAA,KAAK,EAAC,MAAxC;AAA+C,MAAA,IAAI,EAAC,MAApD;AAA2D,MAAA,IAAI,EAAC,MAAhE;AAAuE,MAAA,QAAQ,EAAE,KAAKxC,aAAtF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWgC,GAA5B;AAAiC,MAAA,KAAK,EAAC,KAAvC;AAA6C,MAAA,IAAI,EAAC,MAAlD;AAAyD,MAAA,IAAI,EAAC,KAA9D;AAAoE,MAAA,QAAQ,EAAE,KAAKtC,aAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWiC,OAA5B;AAAqC,MAAA,KAAK,EAAC,SAA3C;AAAqD,MAAA,IAAI,EAAC,MAA1D;AAAiE,MAAA,IAAI,EAAC,SAAtE;AAAgF,MAAA,QAAQ,EAAE,KAAKvC,aAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWmC,QAA5B;AAAsC,MAAA,KAAK,EAAC,UAA5C;AAAuD,MAAA,IAAI,EAAC,MAA5D;AAAmE,MAAA,IAAI,EAAC,UAAxE;AAAmF,MAAA,QAAQ,EAAE,KAAKzC,aAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWoC,QAA5B;AAAsC,MAAA,KAAK,EAAC,UAA5C;AAAuD,MAAA,IAAI,EAAC,UAA5D;AAAuE,MAAA,IAAI,EAAC,UAA5E;AAAuF,MAAA,QAAQ,EAAE,KAAK1C,aAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKM,KAAL,CAAWqC,MAA5B;AAAoC,MAAA,KAAK,EAAC,QAA1C;AAAmD,MAAA,IAAI,EAAC,MAAxD;AAA+D,MAAA,IAAI,EAAC,QAApE;AAA6E,MAAA,QAAQ,EAAE,KAAK3C,aAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAC,QAAjB;AAA0B,MAAA,UAAU,EAAC,QAArC;AAA8C,MAAA,YAAY,EAAE,KAAKoC,UAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CAJJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKY,WAAL,EADL,CAfJ,CADJ;AAqBH;;AAtG0B;;AAyG/B,eAAenD,MAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { RowInput, Input } from '../../components';\r\nimport \"./style.css\"\r\nimport imgDaftar from '../../img/register.svg'\r\n\r\nclass Daftar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            users:[],\r\n            addUser:{\r\n                id:1,\r\n                nik:'',\r\n                jabatan:'',\r\n                nama:'',\r\n                username:'',\r\n                password:'',\r\n                alamat:'',\r\n                roleType:'user'\r\n            }\r\n        }\r\n    }\r\n\r\n// Menangkap nilai tambah user\r\n    onChangeInput = e => {\r\n        let timestamp = new Date().getTime();\r\n        let newUser = {...this.state.addUser}\r\n        newUser['id'] = timestamp;\r\n        newUser [e.target.name]=e.target.value\r\n        this.setState({\r\n            addUser: newUser\r\n        })\r\n    }\r\n\r\n// Ambil Data Semua User\r\n    componentDidMount() {\r\n        fetch('http://localhost:3030/users')\r\n            .then(response => response.json())\r\n            .then(json => this.setState({ users: json }))\r\n    }\r\n\r\n    // refreshHalaman Setelah Aksi\r\n    getPostAPI = () => {\r\n            fetch('http://localhost:3030/users')\r\n                .then(response => response.json())\r\n                .then(json => this.setState({ users: json }))\r\n    }\r\n\r\n    // HandlerRemove\r\n    handleRemove = (data) =>  {\r\n        console.log(data)\r\n        fetch(`http://localhost:3030/users/delete/${data}`).then ((res)=>{\r\n            this.getPostAPI()\r\n            console.log(res);\r\n            window.alert('Data Berhasil Dihapus !')\r\n        })\r\n    }\r\n\r\n\r\n\r\n    postData = async(postData)=>{\r\n        await fetch('http://localhost:3030/auth/daftar', {\r\n            method: 'POST',\r\n            headers: {\r\n                Accept: 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(postData)\r\n        })\r\n        .then(response => response.json())\r\n        .then(result => {\r\n            window.alert(result.message)\r\n        })\r\n        .catch(error => console.log('error', error));\r\n    }\r\n    \r\n\r\n    submitUser = () => {\r\n        console.log(this.state.addUser)\r\n        this.postData(this.state.addUser)\r\n        this.getPostAPI()\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sectionDaftar\">\r\n                <div className=\"img-daftar\">\r\n                    <img alt=\"daftar\" src={imgDaftar}></img>\r\n                </div>\r\n                <div className=\"form-daftar\">\r\n                    <RowInput value={this.state.nama} label=\"Nama\" type=\"text\" name=\"nama\" onChange={this.onChangeInput} />\r\n                    <RowInput value={this.state.nik} label=\"Nik\" type=\"text\" name=\"nik\" onChange={this.onChangeInput} />\r\n                    <RowInput value={this.state.jabatan} label=\"Jabatan\" type=\"text\" name=\"jabatan\" onChange={this.onChangeInput} />\r\n                    <RowInput value={this.state.username} label=\"Username\" type=\"text\" name=\"username\" onChange={this.onChangeInput} />\r\n                    <RowInput value={this.state.password} label=\"Password\" type=\"password\" name=\"password\" onChange={this.onChangeInput} />\r\n                    <RowInput value={this.state.alamat} label=\"Alamat\" type=\"text\" name=\"alamat\" onChange={this.onChangeInput} />\r\n                    <div>\r\n                        <Input typeInput=\"button\" valueInput=\"Daftar\" onClickInput={this.submitUser} />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {this.renderUsers()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Daftar;"]},"metadata":{},"sourceType":"module"}